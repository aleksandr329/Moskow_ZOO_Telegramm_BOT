import time
import telebot
from db import db_table_val, db_comment_save
from telebot import types
from logics import *
from parametrs import YOU_TOKEN
from text_check import text_check01


bot = telebot.TeleBot(YOU_TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    us = message.from_user.id
    name = message.from_user.first_name
    fam = message.from_user.last_name
    nik = message.from_user.username
    db_table_val(us, name, fam, nik)  #<--Function to write the user to the database

    photo_start = open('photo/cat_start.jpg', 'rb')
    bot.send_photo(message.chat.id, photo_start)

    text1 = f'''<b>{name}</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤ –±–æ—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞! 
    –ú—ã —Ö–æ—Ç–∏–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ø—Ä–æ–π—Ç–∏ –Ω–∞—à —É–≤–ª–∏–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç, –ø–æ –∏—Ç–æ–≥—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∫—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–∏–º —Ç–æ—Ç–µ–º–Ω—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º!'''

    bot.send_message(message.chat.id, text1, parse_mode = 'HTML')
    time.sleep(10)
    photo_start2 = open('photo/photo_start_2.jpg', 'rb')
    bot.send_photo(message.chat.id, photo_start2)
    text2 = f'''–ù–∞–º –≤—Å–µ–º —É–∂–µ –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è –ø–æ—Å–∫–æ—Ä–µ–π –Ω–∞—á–∞—Ç—å! –ï—Å–ª–∏ –≤–∞–º —Ç–æ–∂–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü–†–û–ô–¢–ò –¢–ï–°–¢ üëá'''
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton('–ü–†–û–ô–¢–ò –¢–ï–°–¢ ü¶Å')
    markup.add(btn1)
    bot.send_message(message.chat.id, text2,  reply_markup=markup, parse_mode='HTML')

@bot.message_handler(commands=['comment'])
def comment(message):
    mess1 = bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤!')
    bot.register_next_step_handler(mess1, comment_action)

def comment_action(message):
    data_user = (f'ID –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è->:{message.from_user.id}, –ò–º—è –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è->:{message.from_user.first_name}, —Ñ–∞–º–∏–ª–∏—è->:{message.from_user.last_name}, –ù–∏–∫ –Ω–µ–π–º->:{message.from_user.username}')
    db_comment_save(message.from_user.id, message.text)#<--Function that writes a comment to the database.
    c = [276606987, 5851216128]#<--Here you can write a list of ID of administrators who will receive mailings with new comments.
    for i in c:#<--This is the distribution function.
        bot.send_message(i, f'–£ –Ω–∞—Å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤, –Ω–∞–º –Ω–∞–ø–∏—Å–∞–ª: <b>{data_user}</b>, –∏ –≤–æ—Ç —á—Ç–æ –æ–Ω –ø–∏—à–µ—Ç: <b>{message.text}</b>', parse_mode='HTML')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn999 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –≤—Å–µ —Å–Ω–∞—á–∞–ª–∞ üîÑ')
    markup.add(btn999)
    text1 = ('–°–ø–∞—Å–∏–±–æ –≤–∞–º –±–æ–ª—å—à–æ–µ, –≤–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!')
    bot.send_message(message.chat.id, text1, reply_markup=markup, parse_mode='HTML')


@bot.message_handler()
def programm(message):
    logics(message) #<--Function for main logic

    if text_check01(message.text): #<--Checking if the user enters some unscripted text
        text1 = ('''<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏–µ –Ω–∞—à –ë–û–¢ ü§ñ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏üòï –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É üëâüèª /start üëàüèª —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç</b>''')
        bot.send_message(message.chat.id, text1, parse_mode='HTML')



if __name__ == "__main__":

    bot.polling(none_stop=True)


